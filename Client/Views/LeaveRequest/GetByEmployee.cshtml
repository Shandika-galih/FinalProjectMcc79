@model IEnumerable<Client.ViewModels.LeaveRequest.LeaveRequestVM>

@{
    ViewData["Title"] = "GetByEmployee";
    Layout = "_LayoutLeaveRequest";
}

<h1>GetByEmployee</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<section class="section">
    <div class="card">
        <div class="card-header">
            History Leave Request
        </div>
        <div class="card-body">
            <table class="table table-striped" id="table1">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.NIK)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LeaveName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Remarks)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SubmitDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.StartDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EndDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Attachment)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.NIK)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LeaveName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Remarks)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SubmitDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StartDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EndDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Attachment)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                <form action="/leaverequest/delete" method="post">
                                    <input type="hidden" value="@item.Guid" name="guid" />
                                    <button type="submit" class="btn btn-sm btn-danger cancel-button">Cancel</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tableBody = document.querySelector('tbody');
            tableBody.addEventListener('click', function (event) {
                const deleteButton = event.target.closest('.cancel-button');
                if (deleteButton) {
                    event.preventDefault();
                    const form = deleteButton.closest('form');
                    const guid = form.querySelector('input[name="guid"]').value;

                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You won\'t be able to recover this data!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, cancel request!',
                        cancelButtonText: 'No, keep request',
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // If the user confirms, submit the form
                            Swal.fire(
                                'Cancelled!',
                                'Your request has been cancelled.',
                                'success'
                            ).then(() => {
                            form.submit();
                            });
                        } 
                    });
                }
            });
        });</script>
   
}
