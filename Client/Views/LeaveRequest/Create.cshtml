@using Client.ViewModels.Employee;
@using Client.ViewModels.LeaveType;
@model Client.ViewModels.LeaveRequest.LeaveRequestVM

@{
    ViewData["Title"] = "Create";
    Layout = "_LayoutLeaveRequest";
    var guid = User.Claims.FirstOrDefault(x => x.Type == "Guid")?.Value;
    var employee = (EmployeeVM)ViewData["Employee"];
    var manager = (ManagerVM)ViewData["Manager"];
}

<section id="basic-horizontal-layouts">
    <div class="row match-height d-flex justify-content-center">
        <div class="col-md-6 col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Form Leave Request</h4>
                </div>
                <div class="card-content">
                    <div class="card-body">

                        <form action="create" method="post" id="approveForm" data-parsley-validate onsubmit="return validateForm()" EncType="multipart/form-data">
                            <!-- ... -->
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input asp-for="Status" value="0" hidden>
                            <input asp-for="EmployeesGuid" value="@guid" hidden>
                            <div class="form-group">
                                <label class="control-label">FullName</label>
                                <span>: @employee.FirstName @employee.LastName</span>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Manager</label>
                                <span>: @manager.NIK - @manager.FullName</span>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Eligible Leave </label>
                                <span>: @employee.EligibleLeave</span>
                                @if (employee.EligibleLeave == 0)
                                {
                                    <div class="text-danger">You have no eligible leave days remaining. Cannot apply for leave request normal</div>
                                }
                            </div>
                            <div class="col-md-12">
                                <label for="LeaveTypesGuid" class="form-label">Leave Type</label>
                                <select asp-for="LeaveTypesGuid" class="form-select" id="validationCustom">
                                    @{
                                        foreach (var item in (IEnumerable<LeaveTypeVM>)ViewData["LeaveTypes"])
                                        {
                                                <option value="@item.Guid" data-leave-day="@item.LeaveDay">@item.LeaveName</option>
                                        }
                                    }z
                                </select>
                                <div class="invalid-feedback">
                                    Please select a leave type.
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="StartDate" class="control-label"></label>
                                <input asp-for="StartDate" id="StartDate" class="form-control" type="date" onchange="validateWeekend(this, 'start-date-warning')" data-parsley-required="true" />
                                <span asp-validation-for="StartDate" class="text-danger"></span>
                                <div id="start-date-warning" class="text-danger d-none">Please avoid selecting weekends (Saturday or Sunday).</div>
                            </div>
                            <div class="form-group">
                                <label asp-for="EndDate" class="control-label"></label>
                                <input asp-for="EndDate" class="form-control" type="date" onchange="validateWeekend(this, 'end-date-warning') " data-parsley-required="true" />
                                <span asp-validation-for="EndDate" id="EndDate" class="text-danger"></span>
                                <div id="end-date-warning" class="text-danger d-none">Please avoid selecting weekends (Saturday or Sunday).</div>
                            </div>
                            <div class="form-group" hidden>
                                <label asp-for="SubmitDate" class="control-label"></label>
                                <input asp-for="SubmitDate" class="form-control" type="date" />
                                <span asp-validation-for="SubmitDate" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Remarks" class="control-label"></label>
                                <input asp-for="Remarks" class="form-control" data-parsley-required="true" />
                                <span asp-validation-for="Remarks" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Attachment" class="control-label">Attachment</label>
                                <input asp-for="Attachment" class="form-control" type="file">
                                <span asp-validation-for="Attachment" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Create" class="btn btn-primary" id="submitBtn" />
                            </div>
                        </form>
                        <div>
                            <a asp-action="GetByEmployee">Back to List</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.20/dist/sweetalert2.all.min.js"></script>
    <script>
        function validateWeekend(input, warningElementId) {
            var selectedDate = new Date(input.value);
            var dayOfWeek = selectedDate.getDay();
            var warningElement = document.getElementById(warningElementId);

            if (dayOfWeek === 0 || dayOfWeek === 6) {
                warningElement.classList.remove('d-none');
            } else {
                warningElement.classList.add('d-none');
            }
        }

        function isWeekend(date) {
            var day = date.getDay();
            return day === 0 || day === 6;
        }

        function validateForm() {
            var eligibleLeave = @employee.EligibleLeave;
            var startDate = new Date(document.getElementById("StartDate").value);
            var endDate = new Date(document.getElementById("EndDate").value);

            if (startDate > endDate) {
                Swal.fire({
                    icon: "error",
                    title: "Error!",
                    text: "Start Date must be earlier than End Date",
                });
                return false;
            }

            var leaveDays = 0;
            var currentDate = startDate;
            while (currentDate <= endDate) {
                if (!isWeekend(currentDate)) {
                    leaveDays++;
                }
                currentDate.setDate(currentDate.getDate() + 1);
            }

            var leaveTypeSelect = document.getElementById("validationCustom");
            var selectedLeaveType = leaveTypeSelect.options[leaveTypeSelect.selectedIndex];
            var leaveDay = selectedLeaveType.getAttribute("data-leave-day");

            if (selectedLeaveType.text !== "Cuti Normal" && leaveDay) {
                var leaveQuota = parseInt(leaveDay, 10); // Parse leaveDay ke dalam angka
                if (leaveQuota < leaveDays) {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: "Mohon maaf, cuti '" + selectedLeaveType.text + "' hanya memiliki kuota sebesar " + leaveQuota + " hari.",
                    });
                    return false;
                }
            } else if (selectedLeaveType.text === "Cuti Normal") {
                // Jika jenis cuti adalah "Cuti Normal", gunakan nilai eligibleLeave untuk validasi kuota
                if (leaveDays > eligibleLeave) {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: "Eligible Leave is not enough. You just have " + eligibleLeave + " remaining days off.",
                    });
                    return false;
                }
                var startDate = new Date(document.getElementById("StartDate").value);
                var today = new Date();
                var timeDiff = startDate.getTime() - today.getTime();
                var daysBeforeStartDate = Math.ceil(timeDiff / (1000 * 3600 * 24));
                var minimumDays = 7;

                if (daysBeforeStartDate < minimumDays) {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: "You must apply for 'Cuti Normal' at least " + minimumDays + " days before the start date.",
                    });
                    return false;
                }
            }
            return true;
        }
    </script>

  
}

  
